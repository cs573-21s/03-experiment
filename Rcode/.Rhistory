data = charts
library(ggplot2)
data$truePercent <- data$truePercent*100
data$error <- log2(abs(data$reportedPercent - data$truePercent) + 1/8)
#library(dplyr)
#data %>%
#  ggplot(aes(visType, error ) ) +
#  stat_summary(fun.data = "mean_cl_boot", colour = "black", size = 0.5) +
#  coord_flip()
# write.csv(data$error, "/Users/macbookpro/Desktop/data_error.xlsx")  # To export the accuracy
data$new_name <- ifelse(data$visType  == "Type1","Bar",
ifelse(data$visType  == "Type2","Devided",
ifelse(data$visType  == "Type3","Bar",
ifelse(data$visType  == "Type4","Devided",
ifelse(data$visType  == "Type5","Devided",
ifelse(data$visType  == "Type6","Pie",
ifelse(data$visType  == "Type7","Bar","notype")))))))
library(dplyr)
### edited code####
data$new_name2<-factor(data$new_name, levels=c("Devided", "Bar", "Pie"))
data %>%
ggplot(aes(new_name2, error ) ) +     # visType if no specifying names
stat_summary(fun.data = "mean_cl_boot", colour = "black", size = 0.5) +
coord_flip()
charts <- read.csv("~/Desktop/03-experiment/Rcode/charts.csv")
View(charts)
data = charts
library(ggplot2)
data$truePercent <- data$truePercent*100
data$error <- log2(abs(data$reportedPercent - data$truePercent) + 1/8)
#library(dplyr)
#data %>%
#  ggplot(aes(visType, error ) ) +
#  stat_summary(fun.data = "mean_cl_boot", colour = "black", size = 0.5) +
#  coord_flip()
# write.csv(data$error, "/Users/macbookpro/Desktop/data_error.xlsx")  # To export the accuracy
data$new_name <- ifelse(data$visType  == "Type1","Bar",
ifelse(data$visType  == "Type2","Devided",
ifelse(data$visType  == "Type3","Bar",
ifelse(data$visType  == "Type4","Devided",
ifelse(data$visType  == "Type5","Devided",
ifelse(data$visType  == "Type6","Pie",
ifelse(data$visType  == "Type7","Bar","notype")))))))
library(dplyr)
### edited code####
data$new_name2<-factor(data$new_name, levels=c("Devided", "Bar", "Pie"))
data %>%
ggplot(aes(new_name2, error ) ) +     # visType if no specifying names
stat_summary(fun.data = "mean_cl_boot", colour = "black", size = 0.5) +
coord_flip()
data = charts
library(ggplot2)
data$truePercent <- data$truePercent*100
data$error <- log2(abs(data$reportedPercent - data$truePercent) + 1/8)
library(dplyr)
data %>% ggplot(aes(x=data$reportedPercent))+geom_histogram(binwidth=5)+facet_wrap(~visType)
data = charts
library(ggplot2)
data$truePercent <- data$truePercent*100
data$error <- log2(abs(data$reportedPercent - data$truePercent) + 1/8)
library(dplyr)
data %>% ggplot(aes(x=reportedPercent))+geom_histogram(binwidth=5)+facet_wrap(~visType)
data = charts
library(ggplot2)
data$truePercent <- data$truePercent*100
data$error <- log2(abs(data$reportedPercent - data$truePercent) + 1/8)
library(dplyr)
data %>% ggplot(aes(x=truePercent))+geom_histogram(binwidth=5)+facet_wrap(~visType)
data = charts
library(ggplot2)
data$truePercent <- data$truePercent*100
data$error <- log2(abs(data$reportedPercent - data$truePercent) + 1/8)
#library(dplyr)
#data %>%
#  ggplot(aes(visType, error ) ) +
#  stat_summary(fun.data = "mean_cl_boot", colour = "black", size = 0.5) +
#  coord_flip()
# write.csv(data$error, "/Users/macbookpro/Desktop/data_error.xlsx")  # To export the accuracy
data$new_name <- ifelse(data$visType  == "Type1","Bar",
ifelse(data$visType  == "Type2","Devided",
ifelse(data$visType  == "Type3","Bar",
ifelse(data$visType  == "Type4","Devided",
ifelse(data$visType  == "Type5","Devided",
ifelse(data$visType  == "Type6","Pie",
ifelse(data$visType  == "Type7","Bar","notype")))))))
library(dplyr)
### edited code####
data$Type_name<-factor(data$new_name, levels=c("Devided", "Bar", "Pie"))
data %>%
ggplot(aes(Type_name, error ) ) +     # visType if no specifying names
stat_summary(fun.data = "mean_cl_boot", colour = "black", size = 0.5) +
coord_flip()
charts.secondtrial <- read.csv("~/Desktop/03-experiment/Rcode/charts-secondtrial.csv")
View(charts.secondtrial)
`charts+extrapart.combined` <- read.csv("~/Desktop/03-experiment/Rcode/charts+extrapart-combined.csv")
View(`charts+extrapart.combined`)
extraparts <- read.csv("~/Desktop/03-experiment/Rcode/extraparts.csv")
View(extraparts)
data = charts
library(ggplot2)
data$truePercent <- data$truePercent*100
data$error <- log2(abs(data$reportedPercent - data$truePercent) + 1/8)
data$error
#library(dplyr)
#data %>%
#  ggplot(aes(visType, error ) ) +
#  stat_summary(fun.data = "mean_cl_boot", colour = "black", size = 0.5) +
#  coord_flip()
data$new_name <- ifelse(data$visType  == "Type1","Bar",
ifelse(data$visType  == "Type2","Devided",
ifelse(data$visType  == "Type3","Bar",
ifelse(data$visType  == "Type4","Devided",
ifelse(data$visType  == "Type5","Devided",
ifelse(data$visType  == "Type6","Pie",
ifelse(data$visType  == "Type7","Bar","notype")))))))
library(dplyr)
library(forcats)
data %>%
mutate(new_name=fct_reorder(new_name,-error)) %>%
ggplot(aes(new_name, error ) ) + # data$new_name if specifying names
stat_summary(fun.data = "mean_cl_boot", colour = "black", size = 0.5) +
coord_flip()
data = charts.secondtrial
library(ggplot2)
data$truePercent <- data$truePercent*100
data$error <- log2(abs(data$reportedPercent - data$truePercent) + 1/8)
data$error
#library(dplyr)
#data %>%
#  ggplot(aes(visType, error ) ) +
#  stat_summary(fun.data = "mean_cl_boot", colour = "black", size = 0.5) +
#  coord_flip()
data$new_name <- ifelse(data$visType  == "Type1","Bar",
ifelse(data$visType  == "Type2","Devided",
ifelse(data$visType  == "Type3","Bar",
ifelse(data$visType  == "Type4","Devided",
ifelse(data$visType  == "Type5","Devided",
ifelse(data$visType  == "Type6","Pie",
ifelse(data$visType  == "Type7","Bar","notype")))))))
library(dplyr)
library(forcats)
data %>%
mutate(new_name=fct_reorder(new_name,-error)) %>%
ggplot(aes(new_name, error ) ) + # data$new_name if specifying names
stat_summary(fun.data = "mean_cl_boot", colour = "black", size = 0.5) +
coord_flip()
data = extraparts
library(ggplot2)
data$truePercent <- data$truePercent*100
data$error <- log2(abs(data$reportedPercent - data$truePercent) + 1/8)
data$new_name <- ifelse(data$visType  == "Type8","5-bars",
ifelse(data$visType  == "Type9","7-bars",
ifelse(data$visType  == "Type10","3-bars","notype")))
library(dplyr)
data$new_name<-factor(data$new_name, levels=c("5-bars","3-bars", "7-bars"))
data %>%
ggplot(aes(new_name, error ) ) + # data$new_name if specifying names
stat_summary(fun.data = "mean_cl_boot", colour = "black", size = 0.5) +
coord_flip()
